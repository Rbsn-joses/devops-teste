name: pipeline-actions

on:
  push:
    branches:
      - "*"

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
        # Step 1: Checkout code
      - name: Checkout
        uses: actions/checkout@v3
  test:
    runs-on: ubuntu-latest
    needs: [checkout]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Step 2: Set up Node
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      # Step 3: Install dependencies and run tests
      - name: Install dependencies and run tests
        run: |
          cd app
          npm install
          npm test
  build:
    needs: [checkout]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Step 4: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops-teste:${{ github.run_id }}
  deploy:
    runs-on: ubuntu-latest
    needs: [checkout,build]
    steps:
      # Step 7: Deploy to EC2
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.AWS_HOST_EC2 }}
          USER_NAME: ${{ secrets.AWS_HOST_EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '    
          if docker container inspect devops-teste > /dev/null 2>&1; then
            echo "Container devops-teste already running, stopping"
            docker stop devops-teste || true  # Ignore potential errors during stop
            echo "Container devops-teste recreating with new image"
            docker rm devops-teste
            docker run -d --name devops-teste -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/devops-teste:${{ github.run_id }}
            echo "Container is running"
            docker ps
          else
            echo "Starting container devops-teste..."
            docker run -d --name devops-teste -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/devops-teste:${{ github.run_id }}
          fi
            
          '
